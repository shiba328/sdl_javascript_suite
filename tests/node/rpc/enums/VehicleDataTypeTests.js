const SDL = require('../../../config.js').node;

const VehicleDataType = SDL.rpc.enums.VehicleDataType;
const Validator = require('./../../../Validator.js');

describe('VehicleDataTypeTests', function () {
    it('testValidEnums', function (done) {
        let example = 'VEHICLEDATA_GPS';
        const enumVehicledataGps = VehicleDataType.valueForKey(example);

        example = 'VEHICLEDATA_SPEED';
        const enumVehicledataSpeed = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_RPM';
        const enumVehicledataRpm = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_FUELLEVEL';
        const enumVehicledataFuellevel = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_FUELLEVEL_STATE';
        const enumVehicledataFuellevelState = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_FUELCONSUMPTION';
        const enumVehicledataFuelconsumption = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_EXTERNTEMP';
        const enumVehicledataExterntemp = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_VIN';
        const enumVehicledataVin = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_PRNDL';
        const enumVehicledataPrndl = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_TIREPRESSURE';
        const enumVehicledataTirepressure = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ODOMETER';
        const enumVehicledataOdometer = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_BELTSTATUS';
        const enumVehicledataBeltstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_BODYINFO';
        const enumVehicledataBodyinfo = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_DEVICESTATUS';
        const enumVehicledataDevicestatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ECALLINFO';
        const enumVehicledataEcallinfo = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_AIRBAGSTATUS';
        const enumVehicledataAirbagstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_EMERGENCYEVENT';
        const enumVehicledataEmergencyevent = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_CLUSTERMODESTATUS';
        const enumVehicledataClustermodestatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_MYKEY';
        const enumVehicledataMykey = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_BRAKING';
        const enumVehicledataBraking = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_WIPERSTATUS';
        const enumVehicledataWiperstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_HEADLAMPSTATUS';
        const enumVehicledataHeadlampstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_BATTVOLTAGE';
        const enumVehicledataBattvoltage = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ENGINETORQUE';
        const enumVehicledataEnginetorque = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ACCPEDAL';
        const enumVehicledataAccpedal = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_STEERINGWHEEL';
        const enumVehicledataSteeringwheel = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_TURNSIGNAL';
        const enumVehicledataTurnsignal = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_FUELRANGE';
        const enumVehicledataFuelrange = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ENGINEOILLIFE';
        const enumVehicledataEngineoillife = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_ELECTRONICPARKBRAKESTATUS';
        const enumVehicledataElectronicparkbrakestatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_CLOUDAPPVEHICLEID';
        const enumVehicledataCloudappvehicleid = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_OEM_CUSTOM_DATA';
        const enumVehicledataOemCustomData = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_STABILITYCONTROLSSTATUS';
        const enumVehicledataStabilitycontrolsstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_HANDSOFFSTEERING';
        const enumVehicledataHandsoffsteering = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_WINDOWSTATUS';
        const enumVehicledataWindowstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_GEARSTATUS';
        const enumVehicledataGearstatus = VehicleDataType.valueForKey(example);
        example = 'VEHICLEDATA_SEATOCCUPANCY';
        const enumVehicledataSeatoccupancy = VehicleDataType.valueForKey(example);

        Validator.assertNotNullUndefined(enumVehicledataGps, 'VEHICLEDATA_GPS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataSpeed, 'VEHICLEDATA_SPEED returned null.');
        Validator.assertNotNullUndefined(enumVehicledataRpm, 'VEHICLEDATA_RPM returned null.');
        Validator.assertNotNullUndefined(enumVehicledataFuellevel, 'VEHICLEDATA_FUELLEVEL returned null.');
        Validator.assertNotNullUndefined(enumVehicledataFuellevelState, 'VEHICLEDATA_FUELLEVEL_STATE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataFuelconsumption, 'VEHICLEDATA_FUELCONSUMPTION returned null.');
        Validator.assertNotNullUndefined(enumVehicledataExterntemp, 'VEHICLEDATA_EXTERNTEMP returned null.');
        Validator.assertNotNullUndefined(enumVehicledataVin, 'VEHICLEDATA_VIN returned null.');
        Validator.assertNotNullUndefined(enumVehicledataPrndl, 'VEHICLEDATA_PRNDL returned null.');
        Validator.assertNotNullUndefined(enumVehicledataTirepressure, 'VEHICLEDATA_TIREPRESSURE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataOdometer, 'VEHICLEDATA_ODOMETER returned null.');
        Validator.assertNotNullUndefined(enumVehicledataBeltstatus, 'VEHICLEDATA_BELTSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataBodyinfo, 'VEHICLEDATA_BODYINFO returned null.');
        Validator.assertNotNullUndefined(enumVehicledataDevicestatus, 'VEHICLEDATA_DEVICESTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataEcallinfo, 'VEHICLEDATA_ECALLINFO returned null.');
        Validator.assertNotNullUndefined(enumVehicledataAirbagstatus, 'VEHICLEDATA_AIRBAGSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataEmergencyevent, 'VEHICLEDATA_EMERGENCYEVENT returned null.');
        Validator.assertNotNullUndefined(enumVehicledataClustermodestatus, 'VEHICLEDATA_CLUSTERMODESTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataMykey, 'VEHICLEDATA_MYKEY returned null.');
        Validator.assertNotNullUndefined(enumVehicledataBraking, 'VEHICLEDATA_BRAKING returned null.');
        Validator.assertNotNullUndefined(enumVehicledataWiperstatus, 'VEHICLEDATA_WIPERSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataHeadlampstatus, 'VEHICLEDATA_HEADLAMPSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataBattvoltage, 'VEHICLEDATA_BATTVOLTAGE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataEnginetorque, 'VEHICLEDATA_ENGINETORQUE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataAccpedal, 'VEHICLEDATA_ACCPEDAL returned null.');
        Validator.assertNotNullUndefined(enumVehicledataSteeringwheel, 'VEHICLEDATA_STEERINGWHEEL returned null.');
        Validator.assertNotNullUndefined(enumVehicledataTurnsignal, 'VEHICLEDATA_TURNSIGNAL returned null.');
        Validator.assertNotNullUndefined(enumVehicledataFuelrange, 'VEHICLEDATA_FUELRANGE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataEngineoillife, 'VEHICLEDATA_ENGINEOILLIFE returned null.');
        Validator.assertNotNullUndefined(enumVehicledataElectronicparkbrakestatus, 'VEHICLEDATA_ELECTRONICPARKBRAKESTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataCloudappvehicleid, 'VEHICLEDATA_CLOUDAPPVEHICLEID returned null.');
        Validator.assertNotNullUndefined(enumVehicledataOemCustomData, 'VEHICLEDATA_OEM_CUSTOM_DATA returned null.');
        Validator.assertNotNullUndefined(enumVehicledataStabilitycontrolsstatus, 'VEHICLEDATA_STABILITYCONTROLSSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataHandsoffsteering, 'VEHICLEDATA_HANDSOFFSTEERING returned null.');
        Validator.assertNotNullUndefined(enumVehicledataWindowstatus, 'VEHICLEDATA_WINDOWSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataGearstatus, 'VEHICLEDATA_GEARSTATUS returned null.');
        Validator.assertNotNullUndefined(enumVehicledataSeatoccupancy, 'VEHICLEDATA_SEATOCCUPANCY returned null.');
        done();
    });

    it('testInvalidEnum', function (done) {
        const example = 'nIGHT';
        const temp = VehicleDataType.valueForKey(example);
        Validator.assertNull(temp, 'Result of valueForKey should be null.');
        done();
    });

    it('testNullEnum', function (done) {
        const example = null;
        const temp = VehicleDataType.valueForKey(example);
        Validator.assertNull(temp, 'Result of valueForKey should be null.');
        done();
    });
});